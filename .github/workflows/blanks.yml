name: Manage Neon Database

# This workflow triggers on every push to the "main" branch
on:
  push:
    branches:
      - main

jobs:
  create-db:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js (using the latest LTS version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Install Neon CLI
      - name: Install Neon CLI
        run: npm install -g neonctl

      # Install PostgreSQL Client
      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client

      # Create the branch and the database on Neon
      - name: Create Neon Branch and Database
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
        run: |
          echo "Creating a new branch named 'development'..."
          neonctl create-branch --project-id ${{ secrets.NEON_PROJECT_ID }} --branch-name development || exit 1

          echo "Creating a new database named 'ecommerce' on branch 'development'..."
          neonctl create-database --project-id ${{ secrets.NEON_PROJECT_ID }} --branch-name development --database-name ecommerce || exit 1

      # Test the connection to the new database
      - name: Test Connection
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          echo "Testing the connection to the database..."
          psql "postgresql://${{ env.DB_USERNAME }}:${{ env.DB_PASSWORD }}@${{ env.DB_HOST }}/ecommerce" -c "SELECT 'Connection successful!'"

      # Run the SQL file
      - name: Run SQL File
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          psql "postgresql://${{ env.DB_USERNAME }}:${{ env.DB_PASSWORD }}@${{ env.DB_HOST }}/ecommerce" -f ./init_db.sql
